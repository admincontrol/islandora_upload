<?php
/**
 * @file
 *
 *
 *
 *
 */

// Load fedora_item.inc from the fedora_repository module in the api folder.
module_load_include('inc', 'fedora_repository', 'api/fedora_item');
/**
 * Implementation of hook_nodeapi().
 */
function islandora_upload_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {

  switch  ($op)  {
    case  'delete':
      islandora_upload_remove_fedora_obejects($node);
      break;

    case  'insert':
      //need to grab all files attached to node
      //db_query("INSERT INTO {node_fedora_objects} (NID, PID) VALUES (%d, %d)", $node->nid, "232");
      db_query("INSERT INTO {node_fedora_objects} (nid,pid) VALUES ('" . $node->nid . "','2555')");
    break;

    case  'update':
    //replace this with function call node updation
    //drupal_set_message(t('Update Action.'));
    break;
  }
}

/**
 * When a Drupal Node is deleted this function will delete
 * all associated Fedora Objects
 *
 * @param $node
 *   A node object.
 *
 */
function islandora_upload_remove_fedora_obejects($node) {

  //Grab all pid attached to the drupal node
  $sql = "SELECT pid FROM {node_fedora_objects} WHERE nid = '" . $node->nid . "'";
  $results = db_query($sql);

  while ($PID = db_result($results)) { // Get the next result, which will/must always be a single field
    $fedora_item = new Fedora_Item($PID);
    //check to see if the fedora object exists, if exists 1 is returned.
    if  ($fedora_item->exists())  {
      //Can be used if we go the XACML route
      /*
        $log_message = "Purge of object since the node it was attached to has been deleted.";
        $fedora_item->purge($log_message, TRUE); //remove the fedora object
      */
      $state = 'D'; //Set the object to deleted
      $dsid = $PID; //I think this is distinct identifier
      $log_message = "Node {NID:" . $node->nid . "} associate with this object has been deleted and user doesn't have permission to purge so object is set to deleted.";
      $fedora_item->set_datastream_state($dsid, $state, $log_message);
    }
  }
  db_query("DELETE FROM {node_fedora_objects} where nid = '" . $node->nid . "'");
}

/**
 * Implementation of hook_help().
 */
function islandora_upload_help($path, $arg) {
  if ($path == 'admin/help#islandora_upload') {
    $txt  =  'This module is used to sync Drupal Nodes with Fedora Objects.';
    $replace  =  array();
    return  '<p>' . t($txt, $replace) . '</p>';
  }
}

